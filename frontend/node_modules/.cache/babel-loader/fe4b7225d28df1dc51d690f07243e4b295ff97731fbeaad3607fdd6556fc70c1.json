{"ast":null,"code":"var _jsxFileName = \"/Users/danreid/Library/CloudStorage/OneDrive-UniversityofEastLondon/Year 3/cn6035 - Mobile and Distributed Systems/Coursework/attendance-dapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport AttendanceABI from './Attendance.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\nconst App = () => {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(\"\");\n  const [attendance, setAttendance] = useState(0);\n  useEffect(() => {\n    const init = async () => {\n      if (window.ethereum) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, AttendanceABI.abi, signer);\n        setContract(contractInstance);\n        const userAccount = await signer.getAddress();\n        setAccount(userAccount);\n      }\n    };\n    init();\n  }, []);\n  const markAttendance = async () => {\n    if (!contract) {\n      console.error(\"Contract not connected!\");\n      return;\n    }\n    try {\n      console.log(\"Marking attendance for:\", account);\n      const tx = await contract.markAttendance(); // Calls markAttendance() function\n      await tx.wait();\n      alert(\"Attendance marked!\");\n      const newCount = await contract.getAttendance(account);\n      console.log(\"New Attendance Count:\", newCount);\n      setAttendance(Number(newCount));\n    } catch (error) {\n      console.error(\"Error marking attendance:\", error);\n      alert(error.reason || \"Failed to mark attendance!\");\n    }\n  };\n  const registerStudent = async () => {\n    if (!contract) {\n      console.error(\"Contract not connected!\");\n      return;\n    }\n    try {\n      console.log(\"Registering student:\", account);\n      const tx = await contract.registerStudent(account); // Admin should call this!\n      await tx.wait();\n      alert(\"Student Registered!\");\n    } catch (error) {\n      console.error(\"Error registering student:\", error);\n      alert(error.reason || \"Failed to register student!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Attendance DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: registerStudent,\n      children: \"Register as Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: markAttendance,\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attendance: \", attendance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NkIXt5WxBYzebr1LQ5QKyFhUfsk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","AttendanceABI","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","App","_s","contract","setContract","account","setAccount","attendance","setAttendance","init","window","ethereum","provider","BrowserProvider","signer","getSigner","contractInstance","Contract","abi","userAccount","getAddress","markAttendance","console","error","log","tx","wait","alert","newCount","getAttendance","Number","reason","registerStudent","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/danreid/Library/CloudStorage/OneDrive-UniversityofEastLondon/Year 3/cn6035 - Mobile and Distributed Systems/Coursework/attendance-dapp/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport AttendanceABI from './Attendance.json';\n\nconst CONTRACT_ADDRESS = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\n\nconst App = () => {\n    const [contract, setContract] = useState(null);\n    const [account, setAccount] = useState(\"\");\n    const [attendance, setAttendance] = useState(0);\n\n    useEffect(() => {\n        const init = async () => {\n            if (window.ethereum) {\n                const provider = new ethers.BrowserProvider(window.ethereum);\n                const signer = await provider.getSigner();\n                const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, AttendanceABI.abi, signer);\n                setContract(contractInstance);\n                const userAccount = await signer.getAddress();\n                setAccount(userAccount);\n            }\n        };\n\n        init();\n    }, []);\n\n    const markAttendance = async () => {\n        if (!contract) {\n            console.error(\"Contract not connected!\");\n            return;\n        }\n\n        try {\n            console.log(\"Marking attendance for:\", account);\n            const tx = await contract.markAttendance();  // Calls markAttendance() function\n            await tx.wait();\n            alert(\"Attendance marked!\");\n\n            const newCount = await contract.getAttendance(account);\n            console.log(\"New Attendance Count:\", newCount);\n            setAttendance(Number(newCount));\n        } catch (error) {\n            console.error(\"Error marking attendance:\", error);\n            alert(error.reason || \"Failed to mark attendance!\");\n        }\n    };\n\n    const registerStudent = async () => {\n        if (!contract) {\n            console.error(\"Contract not connected!\");\n            return;\n        }\n\n        try {\n            console.log(\"Registering student:\", account);\n            const tx = await contract.registerStudent(account);  // Admin should call this!\n            await tx.wait();\n            alert(\"Student Registered!\");\n        } catch (error) {\n            console.error(\"Error registering student:\", error);\n            alert(error.reason || \"Failed to register student!\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>Attendance DApp</h1>\n            <button onClick={registerStudent}>Register as Student</button>\n            <button onClick={markAttendance}>Mark Attendance</button>\n            <p>Attendance: {attendance}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}