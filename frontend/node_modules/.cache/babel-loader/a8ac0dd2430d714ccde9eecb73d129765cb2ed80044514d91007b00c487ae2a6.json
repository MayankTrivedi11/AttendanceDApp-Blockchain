{"ast":null,"code":"var _jsxFileName = \"/Users/danreid/Library/CloudStorage/OneDrive-UniversityofEastLondon/Year 3/cn6035 - Mobile and Distributed Systems/Coursework/attendance-dapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport AttendanceABI from './Attendance.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x5fc8d32690cc91d4c39d9d3abcbd16989f875707\"; // Update this after deployment!\n\nconst App = () => {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(\"\");\n  const [attendance, setAttendance] = useState(0);\n  const [studentName, setStudentName] = useState(\"\");\n  useEffect(() => {\n    const init = async () => {\n      try {\n        if (window.ethereum) {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const signer = await provider.getSigner();\n          const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, AttendanceABI.abi, signer);\n          setContract(contractInstance);\n          const userAccount = await signer.getAddress();\n          setAccount(userAccount);\n          const initialAttendance = await contractInstance.getAttendance(userAccount);\n          setAttendance(Number(initialAttendance));\n        } else {\n          console.error(\"Ethereum provider not found. Please install MetaMask.\");\n        }\n      } catch (error) {\n        console.error(\"Initialization error:\", error);\n      }\n    };\n    init();\n  }, []);\n  const markAttendance = async () => {\n    if (!contract) {\n      console.error(\"Contract not connected!\");\n      return;\n    }\n    try {\n      console.log(\"Marking attendance for:\", account);\n      const tx = await contract.markAttendance(account);\n      await tx.wait();\n      alert(\"Attendance marked!\");\n      const newCount = await contract.getAttendance(account);\n      setAttendance(Number(newCount));\n    } catch (error) {\n      console.error(\"Error marking attendance:\", error);\n      alert(error.message || \"Failed to mark attendance!\");\n    }\n  };\n  const addStudent = async () => {\n    if (!contract) {\n      console.error(\"Contract not connected!\");\n      return;\n    }\n    if (!studentName) {\n      alert(\"Please enter a student name!\");\n      return;\n    }\n    try {\n      console.log(\"Adding student:\", account, \"with name:\", studentName);\n      const tx = await contract.addStudent(account, studentName);\n      await tx.wait();\n      alert(\"Student Added!\");\n    } catch (error) {\n      console.error(\"Error adding student:\", error);\n      alert(error.message || \"Failed to add student!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Attendance DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: studentName,\n        onChange: e => setStudentName(e.target.value),\n        placeholder: \"Enter student name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addStudent,\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: markAttendance,\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attendance: \", attendance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"WYtJBa/HdRGqm65V9ALMgD2mE7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","AttendanceABI","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","App","_s","contract","setContract","account","setAccount","attendance","setAttendance","studentName","setStudentName","init","window","ethereum","provider","BrowserProvider","request","method","signer","getSigner","contractInstance","Contract","abi","userAccount","getAddress","initialAttendance","getAttendance","Number","console","error","markAttendance","log","tx","wait","alert","newCount","message","addStudent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/danreid/Library/CloudStorage/OneDrive-UniversityofEastLondon/Year 3/cn6035 - Mobile and Distributed Systems/Coursework/attendance-dapp/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport AttendanceABI from './Attendance.json';\n\nconst CONTRACT_ADDRESS = \"0x5fc8d32690cc91d4c39d9d3abcbd16989f875707\"; // Update this after deployment!\n\nconst App = () => {\n    const [contract, setContract] = useState(null);\n    const [account, setAccount] = useState(\"\");\n    const [attendance, setAttendance] = useState(0);\n    const [studentName, setStudentName] = useState(\"\");\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                if (window.ethereum) {\n                    const provider = new ethers.BrowserProvider(window.ethereum);\n                    await window.ethereum.request({ method: 'eth_requestAccounts' });\n                    const signer = await provider.getSigner();\n                    const contractInstance = new ethers.Contract(\n                        CONTRACT_ADDRESS,\n                        AttendanceABI.abi,\n                        signer\n                    );\n                    \n                    setContract(contractInstance);\n                    const userAccount = await signer.getAddress();\n                    setAccount(userAccount);\n\n                    const initialAttendance = await contractInstance.getAttendance(userAccount);\n                    setAttendance(Number(initialAttendance));\n                } else {\n                    console.error(\"Ethereum provider not found. Please install MetaMask.\");\n                }\n            } catch (error) {\n                console.error(\"Initialization error:\", error);\n            }\n        };\n\n        init();\n    }, []);\n\n    const markAttendance = async () => {\n        if (!contract) {\n            console.error(\"Contract not connected!\");\n            return;\n        }\n\n        try {\n            console.log(\"Marking attendance for:\", account);\n            const tx = await contract.markAttendance(account);\n            await tx.wait();\n            alert(\"Attendance marked!\");\n\n            const newCount = await contract.getAttendance(account);\n            setAttendance(Number(newCount));\n        } catch (error) {\n            console.error(\"Error marking attendance:\", error);\n            alert(error.message || \"Failed to mark attendance!\");\n        }\n    };\n\n    const addStudent = async () => {\n        if (!contract) {\n            console.error(\"Contract not connected!\");\n            return;\n        }\n        if (!studentName) {\n            alert(\"Please enter a student name!\");\n            return;\n        }\n\n        try {\n            console.log(\"Adding student:\", account, \"with name:\", studentName);\n            const tx = await contract.addStudent(account, studentName);\n            await tx.wait();\n            alert(\"Student Added!\");\n        } catch (error) {\n            console.error(\"Error adding student:\", error);\n            alert(error.message || \"Failed to add student!\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>Attendance DApp</h1>\n            <p>Account: {account}</p>\n            <div>\n                <input\n                    type=\"text\"\n                    value={studentName}\n                    onChange={(e) => setStudentName(e.target.value)}\n                    placeholder=\"Enter student name\"\n                />\n                <button onClick={addStudent}>Add Student</button>\n            </div>\n            <button onClick={markAttendance}>Mark Attendance</button>\n            <p>Attendance: {attendance}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}